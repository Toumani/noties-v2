generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id          Int     @id @default(autoincrement())
  color       String? @db.VarChar(255)
  name        String? @db.VarChar(255)
  note        note[]
  author      users   @relation(fields: [author_id], references: [username])
  author_id   String
}

model note {
  id          Int       @id @default(autoincrement())
  created     DateTime? @db.Timestamp(6)
  title       String?   @db.VarChar(255)
  category_id Int?
  nbDone      Int?      @map("nb_done") @default(0) @db.SmallInt
  nbTotal     Int?      @map("nb_total") @default(0) @db.SmallInt
  category    category? @relation(fields: [category_id], references: [id], onUpdate: NoAction, map: "fkhmtqn561muh2r322gpkajjilp")
  todo        todo[]
  author      users     @relation(fields: [author_id], references: [username])
  author_id   String
}

model todo {
  id      Int     @id @default(autoincrement())
  done    Boolean
  task    String? @db.VarChar(255)
  note_id Int
  note    note    @relation(fields: [note_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkcy61dldh6e47w18t12q6697ph")
}

model users {
  username    String        @id @db.VarChar(255)
  password    String        @db.VarChar(255)
  enabled     Boolean
  users_roles users_roles[]
  notes       note[]
  categories  category[]
}

model users_roles {
  username String @db.VarChar(255)
  role     String @db.VarChar(255)
  users    users  @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)

  @@id([username, role], map: "users_roles_pk")
}
